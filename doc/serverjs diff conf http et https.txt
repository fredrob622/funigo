// importer l'application app.js
const app = require("./app");
const fs = require('fs');
const cors = require('cors');

// Importer le package pour utiliser les variables d'environnement
const dotenv = require("dotenv");
// La méthode config charge les variables dans le fichier process.env.
const result = dotenv.config();


const express = require('express');

const options = {
  key: fs.readFileSync('D:/funigo/cert-funigo/funigofr/privkey.pem'),
  cert: fs.readFileSync('D:/funigo/cert-funigo/funigofr/fullchain.pem'),
  ca: fs.readFileSync('D:/funigo/cert-funigo/funigofr/chain.pem')
};

app.use(cors({
  origin: 'https://funigo.fr',
  methods: ['GET', 'POST', 'PUT', 'DELETE'], // Méthodes autorisées
  credentials: true // Si vous utilisez des cookies ou des sessions
}));

// app.use(cors());

// configurer le port avec la methode set de express. Attribut la valeur process.env.PORT (3000) à port
app.set("port", process.env.PORT);

//  URL http://localhost:5000/ renvoie   "Hello world"
app.get('/', (req, res) => {
  res.send(`Hello World! vous êtes sur localhost et le port ${process.env.PORT} => URL http://localhost:5000/ !`)
});

app.listen(process.env.PORT, () => {
  console.log(`Express Application exemple à l'écoute sur le port ${process.env.PORT}!`)
});



**********************************************************************************

const https = require('https');
const fs = require('fs');
const express = require('express');
const app = express();

// Chemins vers vos fichiers de certificat
const options = {
  key: fs.readFileSync('D:/funigo/cert-funigo/funigofr/privkey.pem'),
  cert: fs.readFileSync('D:/funigo/cert-funigo/funigofr/fullchain.pem'),
  ca: fs.readFileSync('D:/funigo/cert-funigo/funigofr/chain.pem')
};

// Définir une route de base
app.get('/', (req, res) => {
  res.send('Hello, HTTPS!');
});

// Exemple de route API
app.get('/api/rechercheVocab', (req, res) => {
  res.json({ message: 'Réponse de l\'API rechercheVocab' });
});

// Créer le serveur HTTPS
https.createServer(options, app).listen(5000, () => {
  console.log('Serveur HTTPS en écoute sur le port 5000');
});
